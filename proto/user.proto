syntax = 'proto3';
option go_package = "./gen";

message User {
  string id = 1;
  string username = 2;
  string firstname = 3;
  string lastname = 4;
  string picture = 6;
  string email = 7;
  bool via_google = 8 [json_name="via_google"];
  bool verified = 9;
  string verification_code = 10 [json_name="verification_code"];
  string created_at = 11 [json_name="created_at"];
  string updated_at = 12 [json_name="updated_at"];
  repeated string owned_ai = 13 [json_name="owned_ai"];
  repeated string favorite_ai = 14 [json_name="favorite_ai"];
  string password = 15;
}

// REQ's and RES's

message GetUserByEmailMsg {
  string email = 1;
}

message GetUserByIdMsg {
  string user_id = 1;
}

message CreateUserMsg {
  string username = 1;
  string firstname = 2;
  string lastname = 3;
  string password = 4;
  string picture = 5;
  string email = 6;
  bool via_google = 7 [json_name="via_google"];
}

message CreateUserResponse {
  string user_id = 1;
}

message ResetPasswordRequest {
  string user_id = 1 [json_name="user_id"];
  string password = 2;
}

message ResetPasswordResponse {
  string user_id = 1;
}

message UpdateVerificationStatusRequest {
  string user_id = 1;
}

message UpdateVerificationStatusResponse {
  bool verified = 1;
}

service UserService {
  rpc GetUserByEmail(GetUserByEmailMsg) returns (User);
  rpc GetUserById(GetUserByIdMsg) returns (User);
  rpc CreateUser(CreateUserMsg) returns (CreateUserResponse);
  rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse);
  rpc UpdateVerificationStatus(UpdateVerificationStatusRequest) returns (UpdateVerificationStatusResponse);
}

