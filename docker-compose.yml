version: '3'

networks:
  auth-network:
    driver: bridge
  user-network:
    driver: bridge
  svc-network:
    driver: bridge

services:
  db:
    image: postgres:14.1-alpine
    container_name: data_db
    networks:
      - user-network
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_DB: '${POSTGRES_NAME}'
    ports:
      - 5432:5432

  session:
    image: redis:6.2-alpine
    container_name: session_db
    restart: always
    networks:
      - auth-network
    env_file:
      - .env
    environment:
      REDIS_PASSWORD: '${REDIS_PASSWORD}'
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}

  auth:
    restart: always
    container_name: auth-service
    networks:
      auth-network:
      svc-network:
    build:
      context: .
      dockerfile: auth.Dockerfile
    command: ./auth
    depends_on:
      - session
      - user
    env_file: .env
    expose:
      - 8001
    ports:
      - 8010:8010

  user:
    restart: always
    container_name: user-service
    networks:
      user-network:
      svc-network:
    build:
      context: .
      dockerfile: user.Dockerfile
    command: ./wait-4-postgres.sh data_db ./user
    depends_on:
      - db
    env_file: .env
    environment:
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
    ports:
      - 8000:8000
      - 8001:8001
