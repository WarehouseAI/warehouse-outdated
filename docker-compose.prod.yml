version: '3'

networks:
  svc-network:
    driver: bridge

services:
  db:
    image: postgres:14.1-alpine
    container_name: data_db
    networks:
      - svc-network
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: '${DATA_DB_USER}'
      POSTGRES_PASSWORD: '${DATA_DB_PASSWORD}'
      POSTGRES_DB: '${DATA_DB_NAME}'
      POSTGRES_AI_SERVICE_USER: '${AI_SERVICE_DB_USER}'
      POSTGRES_USER_SERVICE_USER: '${USER_SERVICE_DB_USER}'
      POSTGRES_AI_SERVICE_PASS: '${AI_SERVICE_DB_PASS}'
      POSTGRES_USER_SERVICE_PASS: '${USER_SERVICE_DB_PASS}'
    ports:
      - '${DATA_DB_PORT}:${DATA_DB_PORT}'
    volumes:
      - ./setup-db.sh:/docker-entrypoint-initdb.d/1-setup-db.sh

  session:
    image: redis:6.2-alpine
    container_name: session_db
    restart: always
    networks:
      - svc-network
    env_file:
      - .env
    environment:
      REDIS_PASSWORD: '${SESSION_DB_PASSWORD}'
    ports:
      - '${SESSION_DB_PORT}:${SESSION_DB_PORT}'
    command: redis-server --save 20 1 --loglevel warning --requirepass ${SESSION_DB_PASSWORD}

  auth:
    restart: always
    container_name: auth-service
    networks:
      - svc-network
    build:
      context: .
      dockerfile: dockerfiles/auth.Dockerfile
    command: ./auth
    depends_on:
      - session
      - user
    env_file: .env
    expose:
      - '8001'
    ports:
      - 8010:8010

  user:
    restart: always
    container_name: user-service
    networks:
      - svc-network
    build:
      context: .
      dockerfile: dockerfiles/user.Dockerfile
    command: ./wait-4-postgres.sh data_db ./user
    depends_on:
      - db
    env_file: .env
    ports:
      - 8000:8000
      - 8001:8001

  ai:
    restart: always
    container_name: ai-service
    networks:
      - svc-network
    build:
      context: .
      dockerfile: dockerfiles/ai.Dockerfile
    command: ./wait-4-postgres.sh data_db ./ai
    depends_on:
      - db
      - session
    env_file: .env
    ports:
      - 8020:8020
      - 8021:8021

  # mailserver:
  #   image: ghcr.io/docker-mailserver/docker-mailserver:latest
  #   container_name: mailserver
  #   # Provide the FQDN of your mail server here (Your DNS MX record should point to this value)
  #   hostname: mail.pay-with-crypto.xyz
  #   ports:
  #     - '25:25'
  #     - '465:465'
  #     - '587:587'
  #     - '993:993'
  #   volumes:
  #     - ./docker-data/dms/mail-data/:/var/mail/
  #     - ./docker-data/dms/mail-state/:/var/mail-state/
  #     - ./docker-data/dms/mail-logs/:/var/log/mail/
  #     - ./docker-data/dms/config/:/tmp/docker-mailserver/
  #     - /etc/localtime:/etc/localtime:ro
  #   environment:
  #     - ENABLE_RSPAMD=1
  #     - ENABLE_CLAMAV=1
  #     - ENABLE_FAIL2BAN=1
  #   cap_add:
  #     - NET_ADMIN # For Fail2Ban to work
  #   restart: always
